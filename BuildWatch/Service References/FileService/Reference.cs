//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BuildWatch.FileService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileService.IFileService")]
    public interface IFileService {
        
        // CODEGEN: Generating message contract since the wrapper name (GetPictureReq) of message GetPictureReq does not match the default value (GetPicture)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetPicture", ReplyAction="http://tempuri.org/IFileService/GetPictureResponse")]
        BuildWatch.FileService.GetPictureResp GetPicture(BuildWatch.FileService.GetPictureReq request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/GetPicture", ReplyAction="http://tempuri.org/IFileService/GetPictureResponse")]
        System.Threading.Tasks.Task<BuildWatch.FileService.GetPictureResp> GetPictureAsync(BuildWatch.FileService.GetPictureReq request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPictureReq", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPictureReq {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string UserName;
        
        public GetPictureReq() {
        }
        
        public GetPictureReq(string UserName) {
            this.UserName = UserName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPictureResp", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPictureResp {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string PictureHash;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream PictureData;
        
        public GetPictureResp() {
        }
        
        public GetPictureResp(string PictureHash, System.IO.Stream PictureData) {
            this.PictureHash = PictureHash;
            this.PictureData = PictureData;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileServiceChannel : BuildWatch.FileService.IFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileServiceClient : System.ServiceModel.ClientBase<BuildWatch.FileService.IFileService>, BuildWatch.FileService.IFileService {
        
        public FileServiceClient() {
        }
        
        public FileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BuildWatch.FileService.GetPictureResp BuildWatch.FileService.IFileService.GetPicture(BuildWatch.FileService.GetPictureReq request) {
            return base.Channel.GetPicture(request);
        }
        
        public string GetPicture(string UserName, out System.IO.Stream PictureData) {
            BuildWatch.FileService.GetPictureReq inValue = new BuildWatch.FileService.GetPictureReq();
            inValue.UserName = UserName;
            BuildWatch.FileService.GetPictureResp retVal = ((BuildWatch.FileService.IFileService)(this)).GetPicture(inValue);
            PictureData = retVal.PictureData;
            return retVal.PictureHash;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BuildWatch.FileService.GetPictureResp> BuildWatch.FileService.IFileService.GetPictureAsync(BuildWatch.FileService.GetPictureReq request) {
            return base.Channel.GetPictureAsync(request);
        }
        
        public System.Threading.Tasks.Task<BuildWatch.FileService.GetPictureResp> GetPictureAsync(string UserName) {
            BuildWatch.FileService.GetPictureReq inValue = new BuildWatch.FileService.GetPictureReq();
            inValue.UserName = UserName;
            return ((BuildWatch.FileService.IFileService)(this)).GetPictureAsync(inValue);
        }
    }
}
